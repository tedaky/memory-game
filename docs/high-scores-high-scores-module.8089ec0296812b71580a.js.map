{"version":3,"sources":["./src/score/score-template.component.html","./src/high-scores/high-scores.component.ts","./src/high-scores-routing/high-scores-routing.module.ts","./src/high-scores/high-scores.module.ts"],"names":["profiler","profile","HighScoresComponent","changeDetectionRef","highScores","game","translate","column","displayColumns","title","showClear","comingSoon","count","this","value","match","mode","scores","event","dataChange","emit","newScores","getScoresBy","sort","sub","subscribe","val","makeNewScores","dataSource","data","markForCheck","inputChange","preventDefault","clear","initialiseDataChange","initialiseDataSource","fade","Subscription","unsubscribe","routes","component","path","HighScoresRoutingModule","forChild","HighScoresModule","language","lang","use","console","error","setTranslation","provide","useValue"],"mappings":"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","file":"high-scores-high-scores-module.8089ec0296812b71580a.js","sourcesContent":["<mat-card class=\"mat-elevation-z2\">\n  <mat-card-title>\n    {{ title | translate }}\n    <button\n      mat-flat-button\n      color=\"warn\"\n      type=\"button\"\n      (click)=\"profiler.profile()\"\n      *ngIf=\"!profiler.environment\"\n    >\n      {{ 'PROFILE' | translate }}\n    </button>\n    <button\n      *ngIf=\"showClear\"\n      mat-flat-button\n      color=\"primary\"\n      type=\"button\"\n      (click)=\"clear($event)\"\n    >\n      {{ 'CLEAR' | translate }}\n    </button>\n  </mat-card-title>\n</mat-card>\n\n<mat-card class=\"mat-elevation-z2\">\n  <mat-card-title>{{ 'FILTER_SCORES' | translate }}</mat-card-title>\n  <mat-card-content>\n    <mat-form-field>\n      <mat-label>{{ 'CARDS_TO_MATCH' | translate }}</mat-label>\n      <mat-select [(ngModel)]=\"match\" (selectionChange)=\"inputChange($event)\">\n        <mat-option *ngFor=\"let val of [2, 3, 4]\" [value]=\"val\">\n          {{ val | number: '1.0':translate.currentLang }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>{{ 'UNIQUE_CARDS_COUNT' | translate }}</mat-label>\n      <mat-select [(ngModel)]=\"count\" (selectionChange)=\"inputChange($event)\">\n        <mat-option *ngFor=\"let val of [2, 4, 6]\" [value]=\"val\">\n          {{ val | number: '1.0':translate.currentLang }}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </mat-card-content>\n</mat-card>\n\n<mat-card class=\"mat-elevation-z2\">\n  <mat-card-content>\n    <table mat-table [dataSource]=\"dataSource\">\n      <ng-container matColumnDef=\"column1\">\n        <th mat-header-cell *matHeaderCellDef>{{ column | translate }}:</th>\n        <td mat-cell *matCellDef=\"let element; let i = index\">\n          {{ i + 1 | number: '1.0':translate.currentLang }}\n        </td>\n        <td mat-footer-cell *matFooterCellDef>\n          {{ 1 | number: '1.0':translate.currentLang }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column2\">\n        <th mat-header-cell *matHeaderCellDef>{{ 'TIME' | translate }}:</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.complete.hours | number: '2.0':translate.currentLang }}\n          :\n          {{ element.complete.minutes | number: '2.0':translate.currentLang }}\n          :\n          {{ element.complete.seconds | number: '2.0':translate.currentLang }}\n          :\n          {{\n            element.complete.milliseconds | number: '3.0':translate.currentLang\n          }}\n        </td>\n        <td mat-footer-cell *matFooterCellDef>\n          {{ 0 | number: '2.0':translate.currentLang }}\n          :\n          {{ 0 | number: '2.0':translate.currentLang }}\n          :\n          {{ 3 | number: '2.0':translate.currentLang }}\n          :\n          {{ 0 | number: '3.0':translate.currentLang }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"column3\">\n        <th mat-header-cell *matHeaderCellDef>{{ 'FLIPS' | translate }}:</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.flips }}</td>\n        <td mat-footer-cell *matFooterCellDef>\n          {{ 12 | number: '1.0':translate.currentLang }}\n        </td>\n      </ng-container>\n\n      <tr\n        mat-header-row\n        *matHeaderRowDef=\"displayColumns\"\n        [@fadeAnimation]=\"fade\"\n      ></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let row; columns: displayColumns\"\n        [@fadeAnimation]=\"fade\"\n      ></tr>\n      <tr\n        [@fadeAnimation]=\"fade\"\n        mat-footer-row\n        *matFooterRowDef=\"displayColumns\"\n        [style.display]=\"scores.length === 0 ? 'table-row' : 'none'\"\n      ></tr>\n    </table>\n  </mat-card-content>\n</mat-card>\n<mat-card class=\"mat-elevation-z2\" *ngIf=\"comingSoon\">\n  <mat-card-title>{{ 'COMING_SOON' | translate }}</mat-card-title>\n</mat-card>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit\n} from '@angular/core'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { MatSelectChange } from '@angular/material/select'\nimport { TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\n\nimport { HighScoresService } from './high-scores.service'\nimport { fadeAnimation } from '../fade-animation/fade-animation'\nimport { GameService } from '../game/game.service'\nimport { ProfilerService } from '../profiler/profiler.service'\nimport { ScoresTemplateComponent } from '../score/score-template'\nimport { Statistic } from '../statistic/statistic'\nimport { Count, Match, Mode } from '../statistic/statistic.d'\n\n/**\n * Display the high scores\n */\n@Component({\n  selector: 'app-high-scores',\n  templateUrl: '../score/score-template.component.html',\n  styleUrls: ['../score/score-template.component.scss'],\n  animations: [fadeAnimation],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n/**\n * Display the high scores\n */\nexport class HighScoresComponent\n  implements OnDestroy, OnInit, ScoresTemplateComponent {\n  /**\n   * subscription\n   */\n  private sub: Subscription\n\n  /**\n   * First Column name.\n   */\n  public column: string = 'RANK'\n\n  /**\n   * Data source\n   */\n  public dataSource: MatTableDataSource<Statistic>\n\n  /**\n   * Columns\n   */\n  public displayColumns: string[] = ['column1', 'column2', 'column3']\n\n  public fade: boolean\n\n  /**\n   * Title to show.\n   */\n  public title: string = 'HIGH_SCORES'\n\n  public showClear: boolean = true\n  public comingSoon: boolean = false\n\n  public count: Count = this.game.count.value\n  public match: Match = this.game.match.value\n  public mode: Mode = this.game.mode.value\n\n  public newScores: Statistic[]\n\n  /**\n   * Receive the scores from `HighScoresService`\n   */\n  public get scores(): Statistic[] {\n    return this.highScores.scores\n  }\n\n  constructor(\n    private changeDetectionRef: ChangeDetectorRef,\n    private highScores: HighScoresService,\n    private game: GameService,\n    public profiler: ProfilerService,\n    public translate: TranslateService\n  ) {}\n\n  public inputChange(event?: MatSelectChange): void {\n    this.highScores.dataChange.emit('filtered')\n  }\n\n  private makeNewScores(): void {\n    this.newScores = this.highScores.getScoresBy(\n      this.count,\n      this.match,\n      this.mode\n    )\n\n    this.newScores = this.highScores.sort(this.newScores)\n  }\n\n  /**\n   * Set detection of score changes\n   */\n  private initialiseDataChange(): void {\n    this.sub = this.highScores.dataChange.subscribe((val: string): void => {\n      if (typeof val === 'string') {\n        this.makeNewScores()\n\n        this.dataSource.data = this.newScores || this.scores\n\n        this.changeDetectionRef.markForCheck()\n      }\n    })\n  }\n\n  /**\n   * Set the data source\n   */\n  private initialiseDataSource(): void {\n    this.dataSource = new MatTableDataSource<Statistic>(this.scores)\n    this.inputChange()\n  }\n\n  /**\n   * Clear the scores.\n   */\n  public clear(event: MouseEvent): void {\n    event.preventDefault()\n\n    this.highScores.clear()\n  }\n\n  public ngOnInit(): void {\n    this.initialiseDataChange()\n    this.initialiseDataSource()\n  }\n\n  public ngOnDestroy(): void {\n    this.fade = true\n\n    if (this.sub && this.sub instanceof Subscription) {\n      this.sub.unsubscribe()\n    }\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\n\nimport { HighScoresComponent } from '../high-scores/high-scores.component'\n\nconst routes: Routes = [\n  {\n    component: HighScoresComponent,\n    path: ''\n  }\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HighScoresRoutingModule {}\n","import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule } from '@angular/router'\nimport { TranslateModule, TranslateService } from '@ngx-translate/core'\nimport { Subscription } from 'rxjs'\n\nimport { HighScoresComponent } from './high-scores.component'\nimport { HighScoresRoutingModule } from '../high-scores-routing/high-scores-routing.module'\nimport { LanguageService } from '../language/language.service'\nimport { MaterialModule } from '../material/material.module'\nimport {\n  ROUTE_TOKEN,\n  translateModuleOptions\n} from '../translate-loader/translate-browser.loader'\n\n/**\n * Entry Module\n */\n@NgModule({\n  declarations: [HighScoresComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HighScoresRoutingModule,\n    MaterialModule,\n    RouterModule,\n    TranslateModule.forChild(translateModuleOptions)\n  ],\n  providers: [{ provide: ROUTE_TOKEN, useValue: 'high-scores' }],\n  entryComponents: [HighScoresComponent],\n  bootstrap: [HighScoresComponent]\n})\n/**\n * Entry Module\n */\nexport class HighScoresModule {\n  constructor(language: LanguageService, translate: TranslateService) {\n    language.lang.subscribe((lang: string): void => {\n      let sub: Subscription\n\n      sub = translate.use(lang).subscribe(\n        (): void => {},\n        (): void => {\n          console.error(`Language \"${lang}\": at \"HighScoresModule\" not found.`)\n\n          translate.setTranslation(lang, {}, true)\n        },\n        (): void => {\n          if (sub && sub instanceof Subscription) {\n            sub.unsubscribe()\n          }\n        }\n      )\n    })\n  }\n}\n"],"sourceRoot":"webpack:///"}