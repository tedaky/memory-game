{"version":3,"sources":["webpack/bootstrap","./node_modules/tslib/tslib.es6.js","./projects/the-application/src/utilities/is-null-or-undefined.ts","./projects/the-application/src/utilities/is-null.ts","./projects/the-application/src/utilities/is-undefined.ts","./projects/the-application/src/utilities/make-property.ts","./projects/the-application/src/card/card.ts","./projects/the-application/src/holiday/holiday.ts","./projects/the-application/src/utilities/make-array.ts","./projects/the-application/src/cards/worker/cards.ts","./projects/the-application/src/cards/worker/cards.worker.ts","./projects/the-application/src/cards/worker/post.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__decorate","decorators","target","desc","arguments","length","getOwnPropertyDescriptor","Reflect","decorate","isNullOrUndefined","arg","isNull","undefined","isUndefined","MakeProperty","Model","base","backingField","setter","writable","configurable","primitiveGetter","this","newVal","Array","isArray","set","week","Card","arg1","arg2","image","map","card","result","MakeArray","push","splice","Cards","count","match","createDeck","blankSource","found","cards","findIndex","index","console","warn","holidayCards","today","valentinesDay","Date","getFullYear","getTime","useValentinesDay","createValentinesDayCards","stPatricksDay","useStPatricksDay","createStPatricksDayCards","easter","year","C","G","H","I","J","L","day","f","month","Math","floor","getEaster","useEaster","createEasterCards","july4th","use4thOfJuly","create4thOfJulyCards","halloween","useHalloween","createHalloweenCards","thanksgiving","lastOfNov","thanksgivingDay","getDay","getThanksgiving","useThanksgiving","createThanksgivingCards","christmas","useChristmas","createChristmasCards","createRegularCards","assets","createCard","deck","createCards","shuffleCards","slice","forEach","array","sort","random","addEventListener","event","blank","white","toJSON","postMessage","post","data"],"mappings":"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","file":"cards.9b2512cb716ffbaf7c47.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"N6nc\");\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { isNull } from './is-null'\nimport { isUndefined } from './is-undefined'\n\n/**\n * Check if a value is null or undefined.\n *\n * Examples:\n *\n * ```ts\n * isNullOrUndefined('Text here') // returns false\n * isNullOrUndefined(null) // returns true\n * isNullOrUndefined() // returns true\n * isNullOrUndefined(undefined) // returns true\n * ```\n *\n * @param arg `any` value to check if undefined\n */\nexport function isNullOrUndefined(arg?: any): boolean {\n  if (isNull(arg) || isUndefined(arg)) {\n    return true\n  }\n\n  return false\n}\n","/**\n * Check if a value is null.\n *\n * Examples:\n *\n * ```ts\n * isNull('Text here') // returns false\n * isNull() // returns false\n * isNull(undefined) // returns false\n * isNull(null) // returns true\n * ```\n *\n * @param arg `any` value to check if null\n */\nexport function isNull(arg?: any): boolean {\n  if (arg === null) {\n    return true\n  }\n\n  return false\n}\n","/**\n * Check if a value is undefined.\n *\n * Examples:\n *\n * ```ts\n * isUndefined('Text here') // returns false\n * isUndefined(null) // returns false\n * isUndefined() // returns true\n * isUndefined(undefined) // returns true\n * ```\n *\n * @param arg `any` value to check if undefined\n */\nexport function isUndefined(arg?: any): boolean {\n  if (arg === undefined) {\n    return true\n  }\n\n  return false\n}\n","import { Constructor } from './constructor'\nimport { isNullOrUndefined } from './is-null-or-undefined'\n\n/**\n * Decorator Function for creating class property get and set for primitive types.\n *\n * ### Example:\n *\n * ```ts\n * export class MyClass {\n *   ＠MakeGetSet<MyClass, string>()\n *   public myProperty: string\n * }\n * ```\n *\n * ### Same as:\n *\n * ```ts\n * export class MyClass {\n *   private _myProperty: string\n *   public get myProperty(): string {\n *     return this._myProperty\n *   }\n *   public set myProperty(val: string) {\n *     this._myProperty = val\n *   }\n * }\n * ```\n */\nexport function MakeProperty<T, S>(): (target: T, key: string) => void\n/**\n * Decorator Function for creating class property get and set for `Model` types.\n *\n * Your `Model` should be able to handle zero or more constructor arguments.\n *\n * ### Example:\n *\n * ```ts\n * export class MyModel {\n *   prop1: string\n *   prop2: number\n *   constructor(arg1?: string, arg2?: number) {\n *     this.prop1 = arg1\n *     this.prop2 = arg2\n *   }\n * }\n * export class MyClass {\n *   ＠MakeGetSet<MyClass, MyModel>(MyModel)\n *   public myProperty: MyModel\n * }\n * ```\n *\n * ### Same as:\n *\n * ```ts\n * import { isNullOrUndefined } from '../utilities/is-null-or-undefined'\n * export class MyModel {\n *   prop1: string\n *   prop2: number\n *   constructor(arg1?: string, arg2?: number) {\n *     this.prop1 = arg1\n *     this.prop2 = arg2\n *   }\n * }\n * export class MyClass {\n *   private _myProperty: MyModel\n *   public get myProperty(): MyModel {\n *     if (isNullOrUndefined(this._myProperty)) {\n *       this.myProperty = null\n *     }\n *     return this._myProperty\n *   }\n *   public set myProperty(val: MyModel) {\n *     if (val instanceof MyModel) {\n *       this._myProperty = val\n *     } else if (Array.isArray(val)) {\n *       this._myProperty = new MyModel(...val)\n *     } else if (isNullOrUndefined(val)) {\n *       this._myProperty = new MyModel()\n *     } else {\n *       this._myProperty = new MyModel(val)\n *     }\n *   }\n * }\n * ```\n *\n * @param Model `S` - `Get` will return `Model`; `Set` will assign `Model`\n */\nexport function MakeProperty<T, S>(\n  Model: Constructor<S>\n): (target: T, key: string) => void\n/**\n * Decorator Function for creating class property get and set for primitive types.\n *\n * ### Example:\n *\n * ```ts\n * export class MyClass {\n *   ＠MakeGetSet<MyClass, string>(null, 'default')\n *   public myProperty: string\n * }\n * ```\n *\n * ### Same as:\n *\n * ```ts\n * import { isNullOrUndefined } from '../utilities/is-null-or-undefined'\n * export class MyClass {\n *   private _myProperty: string\n *   public get myProperty(): string {\n *     if (isNullOrUndefined(this._myProperty)) {\n *       this.myProperty = 'default'\n *     }\n *     return this._myProperty\n *   }\n *   public set myProperty(val: string) {\n *     this._myProperty = val\n *   }\n * }\n * ```\n *\n * @param Model is `null` to indicate primitives\n * @param base `any` default value for `get`\n */\nexport function MakeProperty<T, S>(\n  Model: null,\n  base: any\n): (target: T, key: string) => void\n/**\n * Decorator Function for creating class property get and set for `Model` types.\n *\n * Your `Model` should be able to handle zero or more constructor arguments.\n *\n * ### Example:\n *\n * ```ts\n * export class MyModel {\n *   prop1: string\n *   prop2: number\n *   constructor(arg1?: string, arg2?: number) {\n *     this.prop1 = arg1\n *     this.prop2 = arg2\n *   }\n * }\n * export class MyClass {\n *   ＠MakeGetSet<MyClass, MyModel>(MyModel, ['default', 10])\n *   public myProperty: MyModel\n * }\n * ```\n *\n * ### Same as:\n *\n * ```ts\n * import { isNullOrUndefined } from '../utilities/is-null-or-undefined'\n * export class MyModel {\n *   prop1: string\n *   prop2: number\n *   constructor(arg1?: string, arg2?: number) {\n *     this.prop1 = arg1\n *     this.prop2 = arg2\n *   }\n * }\n * export class MyClass {\n *   private _myProperty: MyModel\n *   public get myProperty(): MyModel {\n *     if (isNullOrUndefined(this._myProperty)) {\n *       this.myProperty = ['default', 10] // or\n *       this.myProperty = new MyModel('default', 10)\n *     }\n *     return this._myProperty\n *   }\n *   public set myProperty(val: MyModel) {\n *     if (val instanceof MyModel) {\n *       this._myProperty = val\n *     } else if (Array.isArray(val)) {\n *       this._myProperty = new MyModel(...val)\n *     } else if (isNullOrUndefined(val)) {\n *       this._myProperty = new MyModel()\n *     } else {\n *       this._myProperty = new MyModel(val)\n *     }\n *   }\n * }\n * ```\n *\n * @param Model `S` - `Get` will return `Model`; `Set` will assign `Model`\n * @param base `any` default value for `get`\n */\nexport function MakeProperty<T, S>(\n  Model: Constructor<S>,\n  base: any\n): (target: T, key: string) => void\n\nexport function MakeProperty<T, S>(\n  Model?: Constructor<S> | null,\n  base?: any\n): (target: T, key: string) => void {\n  return (target: T, key: string): void => {\n    //#region Create Writable\n    let backingField: string\n\n    backingField = '_' + key\n\n    Object.defineProperty(target, backingField, {\n      writable: true,\n      enumerable: true,\n      configurable: true\n    })\n    //#endregion Create Writable\n\n    let setter: (this: T, newVal: S) => void\n    let getter: (this: T) => S\n\n    if (isNullOrUndefined(Model)) {\n      if (isNullOrUndefined(base)) {\n        //#region Create Getter for Primitives without a default\n        // property getter\n        function primitiveGetter(this: T): S {\n          return this[backingField]\n        }\n\n        getter = primitiveGetter\n        //#endregion Create Getter for Primitives without a default\n      } else {\n        //#region Create Getter for Primitives with a default\n        // property getter\n        function primitiveGetter(this: T): S {\n          if (isNullOrUndefined(this[backingField])) {\n            this[key] = base\n          }\n\n          return this[backingField]\n        }\n\n        getter = primitiveGetter\n        //#endregion Create Getter for Primitives with a default\n      }\n\n      //#region Create Setter for Primitives\n      // property setter\n      function primitiveSetter(this: T, newVal: S): void {\n        this[backingField] = newVal\n      }\n\n      setter = primitiveSetter\n      //#endregion Create Setter for Primitives\n    } else {\n      //#region Create Getter for Models\n      // property getter\n      function typeGetter(this: T): S {\n        if (isNullOrUndefined(this[backingField])) {\n          this[key] = base\n        }\n\n        return this[backingField]\n      }\n\n      getter = typeGetter\n      //#endregion Create Getter for Models\n\n      //#region Create Setter for Models\n      // property setter\n      function typeSetter(this: T, newVal: S): void {\n        if (newVal instanceof Model) {\n          this[backingField] = newVal\n        } else if (Array.isArray(newVal)) {\n          this[backingField] = new Model(...newVal)\n        } else if (isNullOrUndefined(newVal)) {\n          this[backingField] = new Model()\n        } else {\n          this[backingField] = new Model(newVal)\n        }\n      }\n\n      setter = typeSetter\n      //#endregion Create Setter for Models\n    }\n\n    // Create new property with getter and setter\n    Object.defineProperty(target, key, {\n      get: getter,\n      set: setter,\n      enumerable: true,\n      configurable: true\n    })\n  }\n}\n","import { Flipped, ICard } from './card.d'\nimport { isNullOrUndefined } from '../utilities/is-null-or-undefined'\nimport { MakeProperty } from '../utilities/make-property'\n\n/**\n * Card model to match.\n */\nexport class Card implements ICard {\n  /**\n   * Flipped\n   */\n  @MakeProperty<Card, Flipped>(null, 0)\n  public flipped?: Flipped\n\n  /**\n   * image\n   */\n  @MakeProperty<Card, string>()\n  public image: string\n\n  /**\n   * Name\n   */\n  @MakeProperty<Card, string>()\n  public name: string\n\n  /**\n   * Create Card model.\n   *\n   * @param card `ICard`\n   */\n  constructor(card: ICard)\n  /**\n   * Create Card model.\n   *\n   * @param name `string` Name\n   * @param image `string` Image\n   */\n  constructor(name: string, image: string)\n  constructor(arg1: string | ICard, arg2?: string) {\n    if (typeof arg1 === 'string') {\n      this.name = arg1\n      this.image = arg2\n    } else {\n      this.name = arg1.name\n      this.image = arg1.image\n    }\n  }\n\n  static toJSON(card: Card): ICard\n  static toJSON(cards: Card[]): ICard[]\n  static toJSON(arg: Card | Card[]): ICard | ICard[] {\n    if (isNullOrUndefined(arg)) {\n      return\n    }\n\n    function result(card: Card): ICard {\n      return {\n        image: card.image,\n        name: card.name\n      }\n    }\n\n    if (Array.isArray(arg)) {\n      return arg.map<ICard>(\n        (card: Card): ICard => {\n          return result(card)\n        }\n      )\n    }\n\n    return result(arg)\n  }\n}\n","let week: number\n// Week =\n//   Milliseconds (1000) *\n//   Seconds (60) *\n//   Minutes (60) *\n//   Hours (24) *\n//   Days (7)\nweek = 1000 * 60 * 60 * 24 * 7\n\n// Valentine's Day\nexport function useValentinesDay(): boolean {\n  let today: Date\n  let valentinesDay: Date\n\n  today = new Date()\n  valentinesDay = new Date(`Feb 14 ${today.getFullYear()}`)\n\n  if (\n    today > new Date(valentinesDay.getTime() - week * 2) &&\n    today < new Date(valentinesDay.getTime())\n  ) {\n    return true\n  }\n\n  return false\n}\n\n// St. Patricks's Day\nexport function useStPatricksDay(): boolean {\n  let today: Date\n  let stPatricksDay: Date\n\n  today = new Date()\n  stPatricksDay = new Date(`Mar 17 ${today.getFullYear()}`)\n\n  if (\n    today > new Date(stPatricksDay.getTime() - week * 2) &&\n    today < new Date(stPatricksDay.getTime())\n  ) {\n    return true\n  }\n\n  return false\n}\n\n// Easter\n/**\n * Get the date of Easter for today's year.\n *\n * https://gist.github.com/johndyer/0dffbdd98c2046f41180c051f378f343\n *\n * @param year Use year of today.\n */\nfunction getEaster(year: number): Date {\n  let C: number\n  let G: number\n  let H: number\n  let I: number\n  let J: number\n  let L: number\n  let day: number\n  let f: (x: number) => number\n  let month: number\n\n  f = Math.floor\n  // Golden Number - 1\n  G = year % 19\n  C = f(year / 100)\n  // related to Epact\n  H = (C - f(C / 4) - f((8 * C + 13) / 25) + 19 * G + 15) % 30\n  // number of days from 21 March to the Paschal full moon\n  I = H - f(H / 28) * (1 - f(29 / (H + 1)) * f((21 - G) / 11))\n  // weekday for the Paschal full moon\n  J = (year + f(year / 4) + I + 2 - C + f(C / 4)) % 7\n  // number of days from 21 March to the Sunday on or before the Paschal full moon\n  L = I - J\n\n  month = 3 + f((L + 40) / 44)\n  day = L + 28 - 31 * f(month / 4)\n\n  return new Date(`${month} ${day} ${year}`)\n}\n\nexport function useEaster(): boolean {\n  let today: Date\n  let easter: Date\n\n  today = new Date()\n  easter = getEaster(today.getFullYear())\n\n  if (\n    today > new Date(easter.getTime() - week * 2) &&\n    today < new Date(easter.getTime())\n  ) {\n    return true\n  }\n\n  return false\n}\n\n// 4th of July\nexport function use4thOfJuly(): boolean {\n  let today: Date\n  let july4th: Date\n\n  today = new Date()\n  july4th = new Date(`Jul 04 ${today.getFullYear()}`)\n\n  if (\n    today > new Date(july4th.getTime() - week * 2) &&\n    today < new Date(july4th.getTime() + week / 7)\n  ) {\n    return true\n  }\n\n  return false\n}\n\n// Halloween\nexport function useHalloween(): boolean {\n  let today: Date\n  let halloween: Date\n\n  today = new Date()\n  halloween = new Date(`Oct 31 ${today.getFullYear()}`)\n\n  if (\n    today > new Date(halloween.getTime() - week * 3) &&\n    today < new Date(halloween.getTime())\n  ) {\n    return true\n  }\n\n  return false\n}\n\n// Thanksgiving\n/**\n * Get the date of Thanksgiving for today's year.\n *\n * @param year Use year of today.\n */\nfunction getThanksgiving(year: number): Date {\n  let lastOfNov: number\n  let thanksgivingDay: number\n\n  lastOfNov = new Date(`Nov 30 ${year}`).getDay()\n\n  if (lastOfNov >= 4) {\n    thanksgivingDay = 34 - lastOfNov\n  } else {\n    thanksgivingDay = 27 - lastOfNov\n  }\n\n  return new Date(`Nov ${thanksgivingDay} ${year}`)\n}\n\nexport function useThanksgiving(): boolean {\n  let today: Date\n  let thanksgiving: Date\n\n  today = new Date()\n  thanksgiving = getThanksgiving(today.getFullYear())\n\n  if (\n    today > new Date(thanksgiving.getTime() - week * 3) &&\n    today < new Date(thanksgiving.getTime())\n  ) {\n    return true\n  }\n\n  return false\n}\n\n// Christmas\nexport function useChristmas(): boolean {\n  let today: Date\n  let christmas: Date\n\n  today = new Date()\n  christmas = new Date(`Dec 25 ${today.getFullYear()}`)\n\n  if (\n    today > new Date(christmas.getTime() - week * 3) &&\n    today < new Date(christmas.getTime())\n  ) {\n    return true\n  }\n\n  return false\n}\n","import { isNullOrUndefined } from './is-null-or-undefined'\n\n/**\n * Decorator Function for creating class property get and set for Array.\n *\n * Creates or assigns an array if one doesn't exist.\n * If an array exists, that array is emptied then new array items are pushed.\n *\n * ### Example:\n *\n * ```ts\n * export class MyClass {\n *   ＠MakeArray<MyClass, string>()\n *   public myProperty: string[]\n * }\n * ```\n *\n * ### Same as:\n *\n * ```ts\n * import { isNullOrUndefined } from '@nexplore/utilities'\n * export class MyClass {\n *   private _myProperty: string[]\n *   public get myProperty(): string[] {\n *     if (isNullOrUndefined(this._myProperty)) {\n *       this.myProperty = null\n *     }\n *     return this._myProperty\n *   }\n *   public set myProperty(val: string[]) {\n *     if (isNullOrUndefined(this._myProperty)) {\n *       if (!Array.isArray(val)) {\n *         this._myProperty = []\n *         if (!isNullOrUndefined(val)) {\n *           this._myProperty.push(val)\n *         }\n *       } else {\n *         this._myProperty = val\n *       }\n *     } else {\n *       this._myProperty.splice(0, this._myProperty.length)\n *       if (!Array.isArray(val)) {\n *         if (!isNullOrUndefined(val)) {\n *           this._myProperty.push(val)\n *         }\n *       } else {\n *         this._myProperty.push(...val)\n *       }\n *     }\n *  }\n * }\n * ```\n */\nexport function MakeArray<T, S>(): (target: T, key: string) => void {\n  return (target: T, key: string): void => {\n    //#region Create Writable\n    let backingField: string\n\n    backingField = '_' + key\n\n    Object.defineProperty(target, backingField, {\n      writable: true,\n      enumerable: true,\n      configurable: true\n    })\n    //#endregion Create Writable\n\n    //#region Create Getter and Setter for Array\n    // property getter\n    function getter(this: T): S[] {\n      if (isNullOrUndefined(this[backingField])) {\n        this[key] = null\n      }\n\n      return this[backingField]\n    }\n\n    // property setter\n    function setter(this: T, newVal: S[]): void {\n      // Check if _queued is already set\n      if (isNullOrUndefined(this[backingField])) {\n        // check if newVal is an array\n        if (!Array.isArray(newVal)) {\n          // assign array\n          this[backingField] = []\n\n          // add newVal if newVal is defined\n          if (!isNullOrUndefined(newVal)) {\n            // push newVal\n            this[backingField].push(newVal)\n          }\n        } else {\n          // assign as newVal\n          this[backingField] = newVal\n        }\n      } else {\n        // Clear array\n        this[backingField].splice(0, this[backingField].length)\n\n        if (!Array.isArray(newVal)) {\n          // only push if newVal is defined\n          if (!isNullOrUndefined(newVal)) {\n            this[backingField].push(newVal)\n          }\n        } else {\n          // push all of val array\n          this[backingField].push(...newVal)\n        }\n      }\n    }\n    //#endregion Create Getter and Setter for Array\n\n    // Create new property with getter and setter\n    Object.defineProperty(target, key, {\n      get: getter,\n      set: setter,\n      enumerable: true,\n      configurable: true\n    })\n  }\n}\n","/// <reference lib=\"webworker\" />\n\nimport { Card } from '../../card/card'\nimport { ICard } from '../../card/card.d'\nimport {\n  useValentinesDay,\n  useStPatricksDay,\n  useEaster,\n  use4thOfJuly,\n  useHalloween,\n  useThanksgiving,\n  useChristmas\n} from '../../holiday/holiday'\nimport { Count, Match } from '../../statistic/statistic.d'\nimport { isNullOrUndefined } from '../../utilities/is-null-or-undefined'\nimport { MakeArray } from '../../utilities/make-array'\nimport { MakeProperty } from '../../utilities/make-property'\n\nexport class Cards {\n  //#region get\n  //#region cards\n  /**\n   * List of unique cards.\n   */\n  @MakeArray<Cards, Card>()\n  private cards: Card[]\n  //#endregion cards\n\n  //#region deck\n  /**\n   * Deck of cards.\n   */\n  @MakeArray<Cards, Card>()\n  public deck: Card[]\n  //#endregion deck\n  //#endregion get\n\n  //#region blank, white images\n\n  //#region blankSource\n  /**\n   * BlankSource image folder.\n   */\n  @MakeProperty<Cards, string>(null, 'regular')\n  private blankSource: string\n  //#endregion blankSource\n\n  //#region blank\n  /**\n   * Blank image card.\n   */\n  public get blank(): string {\n    return `assets/${this.blankSource}/blank.png`\n  }\n  //#endregion blank\n\n  //#region white\n  /**\n   * White image card.\n   */\n  public get white(): string {\n    return 'assets/white.png'\n  }\n  //#endregion white\n  //#endregion blank, white images\n\n  //#region constructor\n  constructor()\n  constructor(count: Count, match: Match)\n  constructor(count?: Count, match?: Match) {\n    if (isNullOrUndefined(count)) {\n      count = 2\n    }\n\n    if (isNullOrUndefined(match)) {\n      match = 2\n    }\n\n    this.createDeck(count, match)\n  }\n  //#endregion constructor\n\n  //#region createCard\n  //#region overload\n  /**\n   * Add a unique card.\n   *\n   * @param card `Card`.\n   */\n  private createCard(card: Card): void\n  /**\n   * Add a unique card.\n   *\n   * @param cardLike `ICard`.\n   */\n  private createCard(cardLike: ICard): void\n  /**\n   * Add a unique card.\n   *\n   * @param name `string` title.\n   * @param image `string` path.\n   */\n  private createCard(name: string, image: string): void\n  //#endregion overload\n  private createCard(arg1: string | Card | ICard, arg2?: string): void {\n    let card: Card\n    let found: number\n\n    if (typeof arg1 === 'string') {\n      card = new Card(arg1, arg2)\n    } else {\n      card = new Card(arg1)\n    }\n\n    found = this.cards.findIndex((index: Card): boolean => {\n      return index.name === card.name || index.image === card.image\n    })\n\n    if (found === -1) {\n      this.cards.push(card)\n    } else {\n      console.warn('Card is similar to an existing card.')\n      console.warn('Given card: ', card)\n      console.warn('Existing card: ', this.cards[found])\n    }\n  }\n  //#endregion createCard\n\n  //#region createCardsMethods\n  //#region createCards\n  /**\n   * Create a unique set of cards.\n   */\n  private createCards(): void {\n    // Clear unique cards.\n    this.cards = []\n\n    let holidayCards: boolean\n    holidayCards = false\n\n    // Valentine's Day\n    if (useValentinesDay()) {\n      this.createValentinesDayCards()\n      holidayCards = true\n    }\n\n    // St. Patricks's Day\n    if (useStPatricksDay()) {\n      this.createStPatricksDayCards()\n      holidayCards = true\n    }\n\n    // Easter\n    if (useEaster()) {\n      this.createEasterCards()\n      holidayCards = true\n    }\n\n    // 4th of July\n    if (use4thOfJuly()) {\n      this.create4thOfJulyCards()\n      holidayCards = true\n    }\n\n    // Halloween\n    if (useHalloween()) {\n      this.createHalloweenCards()\n      holidayCards = true\n    }\n\n    // Thanksgiving\n    if (useThanksgiving()) {\n      this.createThanksgivingCards()\n      holidayCards = true\n    }\n\n    // Christmas\n    if (useChristmas()) {\n      this.createChristmasCards()\n      holidayCards = true\n    }\n\n    if (!holidayCards) {\n      this.createRegularCards()\n    }\n  }\n  //#endregion createCards\n\n  //#region createRegularCards\n  /**\n   * Create a unique set of regular cards.\n   */\n  private createRegularCards(): void {\n    let assets: string\n\n    assets = 'assets/regular/'\n\n    this.blankSource = 'regular'\n\n    this.createCard('cheeseburger', `${assets}cheeseburger.png`)\n    this.createCard('fries', `${assets}fries.png`)\n    this.createCard('hotdog', `${assets}hotdog.png`)\n    this.createCard('ice-cream', `${assets}ice-cream.png`)\n    this.createCard('milkshake', `${assets}milkshake.png`)\n    this.createCard('pizza', `${assets}pizza.png`)\n  }\n  //#endregion createRegularCards\n\n  //#region createValentinesDayCards\n  /**\n   * Create a unique set of valentines day cards.\n   */\n  private createValentinesDayCards(): void {\n    let assets: string\n\n    assets = 'assets/valentines-day/'\n\n    this.blankSource = 'valentines-day'\n\n    this.createCard('be my valentine', `${assets}be-my-valentine.png`)\n    this.createCard('bear boy', `${assets}bear-boy.png`)\n    this.createCard('bear girl', `${assets}bear-girl.png`)\n    this.createCard('butterfly', `${assets}butterfly.png`)\n    this.createCard('heart', `${assets}heart.png`)\n    this.createCard('heart box', `${assets}heart-box.png`)\n  }\n  //#endregion createValentinesDayCards\n\n  //#region createStPatricksDayCards\n  /**\n   * Create a unique set of st patricks day cards.\n   */\n  private createStPatricksDayCards(): void {\n    let assets: string\n\n    assets = 'assets/st-patricks-day/'\n\n    this.blankSource = 'st-patricks-day'\n\n    this.createCard('green hat', `${assets}green-hat.png`)\n    this.createCard(\n      'happy saint patricks day',\n      `${assets}happy-saint-patricks-day.png`\n    )\n    this.createCard('lucky', `${assets}lucky.png`)\n    this.createCard('lucky horse shoe', `${assets}lucky-horse-shoe.png`)\n    this.createCard('pot of gold', `${assets}pot-of-gold.png`)\n    this.createCard('shamrock', `${assets}shamrock.png`)\n  }\n  //#endregion createStPatricksDayCards\n\n  //#region createEasterCards\n  /**\n   * Create a unique set of easter cards.\n   */\n  private createEasterCards(): void {\n    let assets: string\n\n    assets = 'assets/easter/'\n\n    this.blankSource = 'easter'\n\n    this.createCard('basket of eggs', `${assets}basket-of-eggs.png`)\n    this.createCard('bear basket', `${assets}bear-basket.png`)\n    this.createCard('bunny carrot', `${assets}bunny-carrot.png`)\n    this.createCard('egg outline', `${assets}egg-outline.png`)\n    this.createCard('egg paisley', `${assets}egg-paisley.png`)\n    this.createCard('rabbit basket', `${assets}rabbit-basket.png`)\n  }\n  //#endregion createEasterCards\n\n  //#region create4thOfJulyCards\n  /**\n   * Create a unique set of 4th of july cards.\n   */\n  private create4thOfJulyCards(): void {\n    let assets: string\n\n    assets = 'assets/4th-of-july/'\n\n    this.blankSource = '4th-of-july'\n\n    this.createCard('flag hat', `${assets}flag-hat.png`)\n    this.createCard('flag horn', `${assets}flag-horn.png`)\n    this.createCard('flag pencil', `${assets}flag-pencil.png`)\n    this.createCard('flag scallop', `${assets}flag-scallop.png`)\n    this.createCard('flag star', `${assets}flag-star.png`)\n    this.createCard('sam smile', `${assets}sam-smile.png`)\n  }\n  //#endregion create4thOfJulyCards\n\n  //#region createHalloweenCards\n  /**\n   * Create a unique set of halloween cards.\n   */\n  private createHalloweenCards(): void {\n    let assets: string\n\n    assets = 'assets/halloween/'\n\n    this.blankSource = 'halloween'\n\n    this.createCard('castle', `${assets}castle.png`)\n    this.createCard('furry monster', `${assets}furry-monster.png`)\n    this.createCard('lantern', `${assets}lantern.png`)\n    this.createCard('pumpkin', `${assets}pumpkin.png`)\n    this.createCard('slug monster', `${assets}slug-monster.png`)\n    this.createCard('witch hat', `${assets}witch-hat.png`)\n  }\n  //#endregion createHalloweenCards\n\n  //#region createThanksgivingCards\n  /**\n   * Create a unique set of thanksgiving cards.\n   */\n  private createThanksgivingCards(): void {\n    let assets: string\n\n    assets = 'assets/thanksgiving/'\n\n    this.blankSource = 'thanksgiving'\n\n    this.createCard('autumn tree', `${assets}autumn-tree.png`)\n    this.createCard('candy corn', `${assets}candy-corn.png`)\n    this.createCard('cornucopia', `${assets}cornucopia.png`)\n    this.createCard('leaf', `${assets}leaf.png`)\n    this.createCard('scarecrow', `${assets}scarecrow.png`)\n    this.createCard('turkey', `${assets}turkey.png`)\n  }\n  //#endregion createThanksgivingCards\n\n  //#region createChristmasCards\n  /**\n   * Create a unique set of christmas cards.\n   */\n  private createChristmasCards(): void {\n    let assets: string\n\n    assets = 'assets/christmas/'\n\n    this.blankSource = 'christmas'\n\n    this.createCard('bell', `${assets}bell.png`)\n    this.createCard('candy cane', `${assets}candy-cane.png`)\n    this.createCard('ornament', `${assets}ornament.png`)\n    this.createCard('sled', `${assets}sled.png`)\n    this.createCard('snowflake', `${assets}snowflake.png`)\n    this.createCard('wreath', `${assets}wreath.png`)\n  }\n  //#endregion createChristmasCards\n  //#endregion createCardsMethods\n\n  //#region createDeck\n  /**\n   * Create a deck pairing each card.\n   */\n  private createDeck(count: Count, match: Match): void {\n    // Clear the current deck of any cards.\n    this.deck = []\n\n    // Replenish unique cards.\n    // Allows for holiday cards without closing and reopening.\n    this.createCards()\n\n    // Randomise the cards.\n    this.shuffleCards(this.cards)\n\n    // Take the number of cards based on the game count setting.\n    this.cards = this.cards.slice(0, count)\n\n    // Loop each individual card.\n    this.cards.forEach((card: Card): void => {\n      let i: number\n\n      i = 0\n\n      // Create new card(s) based on the setCount.\n      for (; i < match; i++) {\n        // Push each new card to the deck.\n        this.deck.push(new Card(card))\n      }\n    })\n\n    // Randomise the deck.\n    this.shuffleCards(this.deck)\n  }\n  //#endregion createDeck\n\n  //#region shuffleCards\n  /**\n   * Shuffle the list of unique cards\n   */\n  private shuffleCards(array: Card[]): void {\n    array.sort((): number => {\n      return 0.5 - Math.random()\n    })\n  }\n  //#endregion shuffleCards\n}\n","/// <reference lib=\"webworker\" />\n\nimport { post } from './post'\nimport { Count, Match } from '../../statistic/statistic.d'\n\naddEventListener(\n  'message',\n  (\n    event: MessageEvent<{\n      count: Count\n      match: Match\n    }>\n  ): void => {\n    post(event.data.count, event.data.match)\n  }\n)\n","/// <reference lib=\"webworker\" />\n\nimport { Cards } from './cards'\nimport { Card } from '../../card/card'\nimport { ICard } from '../../card/card.d'\nimport { Count, Match } from '../../statistic/statistic.d'\nimport { isNullOrUndefined } from '../../utilities/is-null-or-undefined'\n\n/**\n * Post the deck to the main thread.\n *\n * `Count` With Unique Cards Count default of 2\n * `Match` With Amount of Cards to Match default of 2\n */\nexport function post(): void\n/**\n * Post the deck to the main thread.\n *\n * @param count `Count` Unique Cards Count\n * @param match `Match` Amount of Cards to Match\n */\nexport function post(count: Count, match: Match): void\nexport function post(count?: Count, match?: Match): void {\n  let blank: string\n  let cards: Cards\n  let deck: ICard[]\n  let white: string\n\n  if (isNullOrUndefined(count)) {\n    count = 2\n  }\n\n  if (isNullOrUndefined(match)) {\n    match = 2\n  }\n\n  cards = new Cards(count, match)\n  blank = cards.blank\n  white = cards.white\n  deck = Card.toJSON(cards.deck)\n\n  postMessage({\n    blank,\n    deck,\n    white\n  })\n}\n"],"sourceRoot":"webpack:///"}